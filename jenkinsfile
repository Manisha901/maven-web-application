node { 
echo "the Build number is: ${env.BUILD_NUMBER}"
echo "the job name is: ${env.JOB_NAME}"
echo "the node is name is: ${env.NODE_NAME}"
echo "the workspace is: ${env.WORKSPACE}"
echo "the workspace is: ${env.WORKSPACE}"
echo "the jenkins Home directory is: ${env.JENKINS_HOME}"
echo "the jenkins url is: ${env.JENKINS_URL}"
def mavenHome = tool name: 'maven 3.9.9'
try {
stage('CheckOutCode'){
git branch: 'development', credentialsId: '499d6e99-a6c5-4fe6-89c5-3d1ca8cd0585', url: 'https://github.com/Manisha901/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}
stage('UploadArtifactsIntoNexus'){ 
sh "${mavenHome}/bin/mvn clean deploy"
}
stage('DeployAppIntoTomcatServer'){
sshagent(['679c7c70-3ef1-430a-9550-eda9261b4567']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.7.55:/opt/apache-tomcat-9.0.102/webapps/"
}
}
/*
}
catch(e){
    // If there was an exception thrown, the build failed
currentBuild.result = "FAILED"
throw e
} 
finally{
    // Success or failure, always send notifications
sendSlackNotifications(currentBuild.result)
}
}
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#icicibankteam')
}



